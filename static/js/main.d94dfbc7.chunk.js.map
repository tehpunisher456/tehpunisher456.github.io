{"version":3,"sources":["components/Navbar.js","components/Contact.js","components/Home.js","components/About.js","components/Portfolio.js","components/Footer.js","App.js","serviceWorker.js","index.js"],"names":["Navbar","className","href","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","to","Contact","action","name","value","Home","About","class","Portfolio","src","Footer","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"gPAsCiBA,EAnCF,WACb,OACE,yBAAKC,UAAU,+CACb,uBAAGA,UAAU,eAAeC,KAAK,KAAjC,cACA,4BACED,UAAU,iBACVE,KAAK,SACLC,cAAY,WACZC,cAAY,0BACZC,gBAAc,yBACdC,gBAAc,QACdC,aAAW,qBACX,0BAAMP,UAAU,yBAGlB,yBAAKA,UAAU,2BAA2BQ,GAAG,0BAC3C,wBAAIR,UAAU,0BACZ,wBAAIA,UAAU,mBACd,kBAAC,IAAD,CAAMS,GAAK,QAAQT,UAAY,YAA/B,SAGA,wBAAIA,UAAU,YACZ,kBAAC,IAAD,CAAMS,GAAK,SAAST,UAAY,YAAhC,UAEF,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMS,GAAK,aAAaT,UAAY,YAApC,cAEA,wBAAIA,UAAU,YACd,kBAAC,IAAD,CAAMS,GAAK,WAAWT,UAAY,YAAlC,gB,OCRKU,EArBC,WACd,OACE,yBAAKV,UAAU,YACb,yBAAKA,UAAU,kBAAf,WAEA,0BAAMW,OAAO,IAAb,QACO,6BACL,2BAAOT,KAAK,OAAOU,KAAK,OAAOC,MAAM,KACrC,6BAHF,SAKE,6BACA,2BAAOX,KAAK,OAAOU,KAAK,QAAQC,MAAM,KACtC,6BAPF,WAQU,6BACR,2BAAOX,KAAK,UAAUU,KAAK,UAAUC,MAAM,KAC3C,6BACA,2BAAOX,KAAK,SAASW,MAAM,cCTpBC,EAPF,WACX,OACE,yBAAKd,UAAY,aAAjB,sCCkBWe,EApBD,WACV,OACA,yBAAKf,UAAY,aACb,uBAAGgB,MAAM,aAAT,2VAMI,gYAKJ,kGCCOC,EAbG,WAChB,OACE,yBAAKjB,UAAU,aACb,wBAAIA,UAAY,mBAAhB,sBACA,kHACA,yBAAKgB,MAAM,IACT,4BAAQhB,UAAY,UAAUkB,IAAK,8CACnC,uBAAGjB,KAAO,mCAAmCD,UAAY,QAAzD,mCCQSmB,EAhBF,WACb,OACE,yBAAKnB,UAAU,4DACb,yBAAKA,UAAU,gBAAf,kBAGA,yBAAKA,UAAU,2BAA2BQ,GAAG,0BAC3C,wBAAIR,UAAU,0BACZ,wBAAIA,UAAU,mBACZ,uBAAGC,KAAO,qCAAV,eCmBGmB,MArBf,WACE,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACE,kBAAC,IAAD,CAAOC,KAAK,KACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,UACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,cACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,EAAD,QCdYC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.d94dfbc7.chunk.js","sourcesContent":["import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst Navbar = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\n      <a className=\"navbar-brand\" href=\"#\">Erik Lopez</a>\n      <button\n        className=\"navbar-toggler\"\n        type=\"button\"\n        data-toggle=\"collapse\"\n        data-target=\"#navbarSupportedContent\"\n        aria-controls=\"navbarSupportedContent\"\n        aria-expanded=\"false\"\n        aria-label=\"Toggle navigation\">\n        <span className=\"navbar-toggler-icon\"></span>\n      </button>\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"nav-item active\">\n          <Link to = \"/home\" className = \"nav-link\">Home</Link>\n\n          </li>\n          <li className=\"nav-item\">\n            <Link to = \"/about\" className = \"nav-link\">About</Link>\n          </li>\n          <li className=\"nav-item\">\n          <Link to = \"/portfolio\" className = \"nav-link\">Portfolio</Link>\n          </li>\n          <li className=\"nav-item\">\n          <Link to = \"/contact\" className = \"nav-link\">Contact</Link>\n          </li>\n        </ul>\n        </div>\n      </nav>\n      )\n  }\n  export default Navbar;","import React from \"react\"\n\nconst Contact = () => {\n  return (\n    <div className=\"mainbody\">\n      <div className=\"mainbodyheader\">Contact</div>\n\n      <form action=\"\">\n        Name:<br/>\n        <input type=\"text\" name=\"Name\" value=\"\"/>\n        <br/>\n        Email:\n        <br/>\n        <input type=\"text\" name=\"Email\" value=\"\"/>\n        <br/>\n        Message:<br/>\n        <input type=\"message\" name=\"Message\" value=\"\"/>\n        <br></br>\n        <input type=\"submit\" value=\"Submit\"/>\n      </form>\n    </div>\n  )\n}\nexport default Contact","import React from \"react\"\n\nconst Home = () => {\n  return (\n    <div className = \"container\">\nHello! and welcome to my website!    \n</div>\n  )\n}\nexport default Home","import React from \"react\"\n\nconst About = () => {\n    return(\n    <div className = \"container\"> \n        <p class=\"paragraph\">\n            Hello! My name is Erik Lopez, and I am a new web designer! I am still in the process of learning how to \n            code and am still learning, but I hope to one day make a career out of this. This is my first assignment\n            that isn't prework, and this is the first website that I can say I made, even if I don't know how the\n            backend works, (thanks Github!).\n        </p>\n            <p>I honestly don't really do much outside of hanging out with my daughter. She loves watching movies and tv\n            shows. She also enjoys looking our fish tank, a 10 gallon reef tank with 2 clownfish, some snails, and an assortment of \n            different coral. She also absolutely loves stuffed animals and has quite a collection from bears to cats \n            and even some pokemon. \n            </p>\n        <p> \n            I'm looking forward to studying towards becoming a web developer!\n        </p>  \n    </div>\n    )\n}\nexport default About","import React from \"react\"\nimport {Link} from \"react-router-dom\"\nimport Week19 from \"./Week-19\"\n\nconst Portfolio = () => {\n  return (\n    <div className=\"container\">\n      <h2 className = \"portfolio-title\">Website Highlights</h2>\n      <h5>Below are the highlights for websites I have either built or worked on with a team</h5>\n      <div class=\"\">\n        <iframe className = \"week-19\" src= \"https://tehpunisher456.github.io/week-19/\"/>\n        <a href = \"tehpunisher456.github.io/week-19\" className = \"row \"> Week-19: Employee Directory</a>\n      </div>\n    </div>\n  )\n}\n\nexport default Portfolio","import React from \"react\";\nimport {Link} from \"react-router-dom\"\n\nconst Footer = () => {\n  return (\n    <nav className=\"navbar navbar-expand-lg navbar-dark bg-dark fixed-footer\">\n      <div className=\"navbar-brand\">Copyright 2020</div>\n\n\n      <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\n        <ul className=\"nav navbar-nav ml-auto\">\n          <li className=\"nav-item active\">\n            <a href = \"https://github.com/tehpunisher456\">github</a>\n          </li>\n        </ul>\n        </div>\n      </nav>\n      )\n  }\n  export default Footer;","import React from 'react';\nimport './App.css';\nimport Navbar from './components/Navbar';\nimport {BrowserRouter, Route} from 'react-router-dom';\nimport Contact from \"./components/Contact\"\nimport Home from \"./components/Home\"\nimport About from \"./components/About\"\nimport Portfolio from \"./components/Portfolio\"\nimport Footer from \"./components/Footer\"\n\nfunction App() {\n  return (\n    <BrowserRouter>\n      <Navbar/>\n        <Route path=\"/\">\n          <Home></Home>\n        </Route>\n        <Route path=\"/about\">\n          <About></About>\n        </Route>\n        <Route path=\"/portfolio\">\n          <Portfolio></Portfolio>\n        </Route>\n        <Route path=\"/contact\">\n          <Contact></Contact>\n        </Route>\n        <Footer/>\n    </BrowserRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}